kable(metrics_table, caption = "Comparison")
# Best model in BIC
best_model <- forward_model
# Standardized residuals
std_residuals <- rstandard(best_model)/(1-influence(best_model)$hat)
# Best model in BIC
best_model <- forward_model
# Standardized residuals
std_residuals <- rstandard(best_model)/(1-influence(best_model)$hat)
glimpse(df)
mutate(df,
vituse_new = factor(vituse == "no",
levels = c(FALSE, TRUE),
labels = c("yes", "no"))) -> df
glimpse(df)
count(df, vituse_new)
# not vituseoften = notoften + no as reference
df <- mutate(df, vituse_new = relevel(vituse_new, "no"))
forward_stepwise_new <- glm(formula = lowplasma_01 ~ betadiet + bmi + vituse_new + age +
betadiet:bmi, family = "binomial", data = df)
forward_stepwise_new_sum <- summary(forward_stepwise_new)
forward_stepwise_new_sum
glimpse(df)
mutate(df,
vituse_new = factor(vituse == "no",
levels = c(FALSE, TRUE),
labels = c("yes", "no"))) -> df
glimpse(df)
count(df, vituse_new)
# not vituseoften = notoften + no as reference
df <- mutate(df, vituse_new = relevel(vituse_new, "yes"))
forward_stepwise_new <- glm(formula = lowplasma_01 ~ betadiet + bmi + vituse_new + age +
betadiet:bmi, family = "binomial", data = df)
forward_stepwise_new_sum <- summary(forward_stepwise_new)
forward_stepwise_new_sum
D_diff <- forward_stepwise_new_sum$deviance - forward_stepwise_sum$deviance
df_diff <- forward_stepwise_new_sum$df.residual - forward_stepwise_sum$df.residual
cbind(D_diff, df_diff)
chi2_alpha <- qchisq(1 - 0.05, df_diff)
Pvalue <- pchisq(D_diff, df_diff, lower.tail = FALSE)
cbind(D_diff, df_diff, chi2_alpha, Pvalue)
Present a table, Table.3(b), with the estimated β-parameters in each of the different models (you will end up with at least one and at most six different models). Use one row for each variable that is present in at least one of the models, and one column of estimates for each of the models
df2 <- data.frame(variable = names(excl_glm$coefficients),
b_model2 = excl_glm$coefficients, row.names = NULL)
df3 <- data.frame(variable = names(backward_model$coefficients),
b_model3 = backward_model$coefficients, row.names = NULL)
df4 <- data.frame(variable = names(backward_stepwise_model$coefficients),
b_model4 = backward_stepwise_model$coefficients, row.names = NULL)
df5 <- data.frame(variable = names(forward_model$coefficients),
b_model5 = forward_model$coefficients, row.names = NULL)
df6 <- data.frame(variable = names(forward_stepwise_model$coefficients),
b_model6 = forward_stepwise_model$coefficients, row.names = NULL)
df7 <- data.frame(variable = names(forward_stepwise_new$coefficients),
b_model7 = forward_stepwise_new$coefficients, row.names = NULL)
models <- full_join(df2, df3)  |> full_join(df4) |> full_join(df5) |> full_join(df6) |> full_join(df7)
models
```
View(models)
Present a table, Table.3(b), with the estimated β-parameters in each of the different models (you will end up with at least one and at most six different models). Use one row for each variable that is present in at least one of the models, and one column of estimates for each of the models
df2 <- data.frame(variable = names(excl_glm$coefficients),
b_full = excl_glm$coefficients, row.names = NULL)
df3 <- data.frame(variable = names(backward_model$coefficients),
b_backward = backward_model$coefficients, row.names = NULL)
df4 <- data.frame(variable = names(backward_stepwise_model$coefficients),
b_backstep = backward_stepwise_model$coefficients, row.names = NULL)
df5 <- data.frame(variable = names(forward_model$coefficients),
b_forward = forward_model$coefficients, row.names = NULL)
df6 <- data.frame(variable = names(forward_stepwise_model$coefficients),
b_model6 = forward_stepwise_model$coefficients, row.names = NULL)
df7 <- data.frame(variable = names(forward_stepwise_new$coefficients),
b_redmodel = forward_stepwise_new$coefficients, row.names = NULL)
models <- full_join(df2, df3)  |> full_join(df4) |> full_join(df5) |> full_join(df7)
models
```
df7 <- data.frame(variable = names(forward_stepwise_new$coefficients),
b_redmodel = forward_stepwise_new$coefficients, row.names = NULL)
models <- full_join(df2, df3)  |> full_join(df4) |> full_join(df5) |> full_join(df7)
models
```
View(models)
D_diff <- forward_stepwise_new_sum$deviance - forward_stepwise_sum$deviance
df_diff <- forward_stepwise_new_sum$df.residual - forward_stepwise_sum$df.residual
cbind(D_diff, df_diff)
chi2_alpha <- qchisq(1 - 0.05, df_diff)
Pvalue <- pchisq(D_diff, df_diff, lower.tail = FALSE)
cbind(D_diff, df_diff, chi2_alpha, Pvalue)
glimpse(df)
mutate(df,
vituse_new = factor(vituse == "no",
levels = c(FALSE, TRUE),
labels = c("yes", "no"))) -> df
glimpse(df)
count(df, vituse_new)
# not vituseoften = notoften + no as reference
df <- mutate(df, vituse_new = relevel(vituse_new, "yes"))
forward_stepwise_new <- glm(formula = lowplasma_01 ~ betadiet + bmi + vituse_new + age +
betadiet:bmi, family = "binomial", data = df)
forward_stepwise_new_sum <- summary(forward_stepwise_new)
forward_stepwise_new_sum
D_diff <- forward_stepwise_new_sum$deviance - forward_stepwise_sum$deviance
df_diff <- forward_stepwise_new_sum$df.residual - forward_stepwise_sum$df.residual
cbind(D_diff, df_diff)
chi2_alpha <- qchisq(1 - 0.05, df_diff)
Pvalue <- pchisq(D_diff, df_diff, lower.tail = FALSE)
cbind(D_diff, df_diff, chi2_alpha, Pvalue)
anova_stepwise <- anova(forward_stepwise_new, forward_stepwise_model)
anova_stepwise
Present a table, Table.3(b), with the estimated β-parameters in each of the different models (you will end up with at least one and at most six different models). Use one row for each variable that is present in at least one of the models, and one column of estimates for each of the models
df2 <- data.frame(variable = names(excl_glm$coefficients),
b_full = excl_glm$coefficients, row.names = NULL)
df3 <- data.frame(variable = names(backward_model$coefficients),
b_backward = backward_model$coefficients, row.names = NULL)
df4 <- data.frame(variable = names(backward_stepwise_model$coefficients),
b_backstep = backward_stepwise_model$coefficients, row.names = NULL)
df5 <- data.frame(variable = names(forward_model$coefficients),
b_forward = forward_model$coefficients, row.names = NULL)
df6 <- data.frame(variable = names(forward_stepwise_model$coefficients),
b_model6 = forward_stepwise_model$coefficients, row.names = NULL)
df7 <- data.frame(variable = names(forward_stepwise_new$coefficients),
b_redmodel = forward_stepwise_new$coefficients, row.names = NULL)
models <- full_join(df2, df3)  |> full_join(df4) |> full_join(df5) |> full_join(df7)
models
```
View(models)
forward_stepwise_new_sum
View(models)
View(models)
anova_stepwise <- anova(forward_stepwise_new, forward_stepwise_model)
anova_stepwise
D_diff <- forward_stepwise_new_sum$deviance - forward_stepwise_sum$deviance
df_diff <- forward_stepwise_new_sum$df.residual - forward_stepwise_sum$df.residual
cbind(D_diff, df_diff)
chi2_alpha <- qchisq(1 - 0.05, df_diff)
Pvalue <- pchisq(D_diff, df_diff, lower.tail = FALSE)
cbind(D_diff, df_diff, chi2_alpha, Pvalue)
anova_stepwise <- anova(forward_stepwise_new, forward_stepwise_model)
anova_stepwise
Present a table, Table.3(b), with the estimated β-parameters in each of the different models (you will end up with at least one and at most six different models). Use one row for each variable that is present in at least one of the models, and one column of estimates for each of the models
df2 <- data.frame(variable = names(excl_glm$coefficients),
b_full = excl_glm$coefficients, row.names = NULL)
df3 <- data.frame(variable = names(backward_model$coefficients),
b_backward = backward_model$coefficients, row.names = NULL)
df4 <- data.frame(variable = names(backward_stepwise_model$coefficients),
b_backstep = backward_stepwise_model$coefficients, row.names = NULL)
df5 <- data.frame(variable = names(forward_model$coefficients),
b_forward = forward_model$coefficients, row.names = NULL)
df6 <- data.frame(variable = names(forward_stepwise_model$coefficients),
b_model6 = forward_stepwise_model$coefficients, row.names = NULL)
df7 <- data.frame(variable = names(forward_stepwise_new$coefficients),
b_redmodel = forward_stepwise_new$coefficients, row.names = NULL)
models <- full_join(df2, df3)  |> full_join(df4) |> full_join(df5) |> full_join(df7)
models
```
## 3(c)
Calculate McFadden’s adjusted pseudo R2, AIC and BIC for all models from Table.3(b), and indicate which model is best, according to each of these criteria
```{r}
View(df)
View(df)
glimpse(df)
mutate(df,
vituse_new = factor(vituse == "no",
levels = c(FALSE, TRUE),
labels = c("yes", "no"))) -> df
glimpse(df)
count(df, vituse_new)
# not vituseoften = notoften + no as reference
df <- mutate(df, vituse_new = relevel(vituse_new, "yes"))
forward_stepwise_new <- glm(formula = lowplasma_01 ~ betadiet + bmi + vituse_new + age +
betadiet:bmi, family = "binomial", data = df)
forward_stepwise_new_sum <- summary(forward_stepwise_new)
forward_stepwise_new_sum
D_diff <- forward_stepwise_new_sum$deviance - forward_stepwise_sum$deviance
df_diff <- forward_stepwise_new_sum$df.residual - forward_stepwise_sum$df.residual
cbind(D_diff, df_diff)
chi2_alpha <- qchisq(1 - 0.05, df_diff)
Pvalue <- pchisq(D_diff, df_diff, lower.tail = FALSE)
cbind(D_diff, df_diff, chi2_alpha, Pvalue)
Present a table, Table.3(b), with the estimated β-parameters in each of the different models (you will end up with at least one and at most six different models). Use one row for each variable that is present in at least one of the models, and one column of estimates for each of the models
df2 <- data.frame(variable = names(excl_glm$coefficients),
b_full = excl_glm$coefficients, row.names = NULL)
df3 <- data.frame(variable = names(backward_model$coefficients),
b_backward = backward_model$coefficients, row.names = NULL)
forward_stepwise_new_sum
D_diff <- forward_stepwise_new_sum$deviance - forward_stepwise_sum$deviance
df_diff <- forward_stepwise_new_sum$df.residual - forward_stepwise_sum$df.residual
cbind(D_diff, df_diff)
chi2_alpha <- qchisq(1 - 0.05, df_diff)
Pvalue <- pchisq(D_diff, df_diff, lower.tail = FALSE)
cbind(D_diff, df_diff, chi2_alpha, Pvalue)
anova_stepwise <- anova(forward_stepwise_new, forward_stepwise_model)
anova_stepwise
forward_stepwise_new_sum$deviance
```{r}
collect.AICetc |> mutate(df.1 = NULL) -> collect.AICetc
collect.AICetc
logLik(null_glm)
lnL0 <- logLik(null_glm)[1]
lnL0
collect.AICetc |> mutate(
loglik =  c(logLik(null_glm)[1],
logLik(excl_glm)[1],
logLik(backward_model)[1],
logLik(backward_stepwise_model)[1],
logLik(forward_model)[1],
logLik(forward_stepwise_model)[1],
logLik(forward_stepwise_new)[1])) -> collect.AICetc
collect.AICetc
collect.AICetc |> mutate(
#R2McF = 1 - loglik/lnL0,
R2McF.adj = 1 - (loglik - (df - 1)/2)/lnL0) -> collect.AICetc
collect.AICetc
table3d <- collect.AICetc %>%
select(df, AIC, BIC, R2McF.adj)
```{r}
collect.AICetc |> mutate(df.1 = NULL) -> collect.AICetc
collect.AICetc
logLik(null_glm)
lnL0 <- logLik(null_glm)[1]
lnL0
collect.AICetc |> mutate(
loglik =  c(logLik(null_glm)[1],
logLik(excl_glm)[1],
logLik(backward_model)[1],
logLik(backward_stepwise_model)[1],
logLik(forward_model)[1],
logLik(forward_stepwise_model)[1],
logLik(forward_stepwise_new)[1])) -> collect.AICetc
collect.AICetc
collect.AICetc |> mutate(
#R2McF = 1 - loglik/lnL0,
R2McF.adj = 1 - (loglik - (df - 1)/2)/lnL0) -> collect.AICetc
collect.AICetc
table3d <- collect.AICetc %>%
select(df, AIC, BIC, R2McF.adj)
table3d
```
View(table3d)
df7 <- data.frame(variable = names(forward_stepwise_new$coefficients),
b_redmodel = forward_stepwise_new$coefficients, row.names = NULL)
models <- full_join(df3)  |> full_join(df4) |> full_join(df5) |> full_join(df7)
df7 <- data.frame(variable = names(forward_stepwise_new$coefficients),
b_redmodel = forward_stepwise_new$coefficients, row.names = NULL)
models <- full_join(df3,df4) |> full_join(df5) |> full_join(df7)
models
```
View(models)
table3d
```
```{r}
```{r}
```{r}
table3d
```
```{r}
```{r}
```{r}
```{r}
```{r}
View(backward_stepwise_model)
View(backward_model)
```{r}
AIC(backward_model)
collect.AICetc <- data.frame(aic, bic)
collect.AICetc
```{r}
```{r}
View(backward_model)
excl_sum <- summary(excl_glm)
#excl_sum
null_glm <- glm(lowplasma_01 ~ 1, family = "binomial", data = df)
backward_model <- step(excl_glm,
scope = list(lower = null_glm, upper = excl_glm),
direction = "backward",
k = log(nobs(excl_glm)))
#backward_model <- step(excl_glm, direction = "backward", k = log(nobs(excl_glm)))
# AIC unless we supply k=log(n)
# BIC since we supplied k=log(n)
backward_stepwise_model <- step(backward_model,
scope = list(lower = null_glm, upper = excl_glm),
direction = "both",
k = log(nobs(excl_glm)))
forward_model <- step(null_glm,
k = log(nobs(excl_glm)),
scope = list(lower = null_glm, upper = excl_glm),,
direction = "forward")
forward_stepwise_model <- step(forward_model,
scope = list(lower = null_glm, upper = excl_glm),
direction = "both",
k = log(nobs(excl_glm)))
forward_stepwise_model
BIC(excl_glm, backward_model, backward_stepwise_model, forward_model, forward_stepwise_model)
backward_stepwise_sum <- summary(backward_stepwise_model)
backward_stepwise_sum
#glimpse(df)
forward_stepwise_sum <- summary(forward_stepwise_model)
forward_stepwise_sum
forward_stepwise_sum$coefficients
bhat <- forward_stepwise_model$coefficients
ci.beta <- confint(forward_stepwise_model)
or = exp(bhat)
ci.or <- exp(ci.beta)
cbind('beta'=bhat,ci.beta) |> round(digits = 4)
glimpse(df)
mutate(df,
vituse_new = factor(vituse == "no",
levels = c(FALSE, TRUE),
labels = c("yes", "no"))) -> df
glimpse(df)
count(df, vituse_new)
# not vituseoften = notoften + no as reference
df <- mutate(df, vituse_new = relevel(vituse_new, "yes"))
forward_stepwise_new <- glm(formula = lowplasma_01 ~ betadiet + bmi + vituse_new + age +
betadiet:bmi, family = "binomial", data = df)
forward_stepwise_new_sum <- summary(forward_stepwise_new)
forward_stepwise_new_sum
D_diff <- forward_stepwise_new_sum$deviance - forward_stepwise_sum$deviance
df_diff <- forward_stepwise_new_sum$df.residual - forward_stepwise_sum$df.residual
cbind(D_diff, df_diff)
chi2_alpha <- qchisq(1 - 0.05, df_diff)
Pvalue <- pchisq(D_diff, df_diff, lower.tail = FALSE)
cbind(D_diff, df_diff, chi2_alpha, Pvalue)
forward_stepwise_new_sum$deviance
anova_stepwise <- anova(forward_stepwise_new, forward_stepwise_model)
anova_stepwise
Present a table, Table.3(b), with the estimated β-parameters in each of the different models (you will end up with at least one and at most six different models). Use one row for each variable that is present in at least one of the models, and one column of estimates for each of the models
df2 <- data.frame(variable = names(excl_glm$coefficients),
b_full = excl_glm$coefficients, row.names = NULL)
df3 <- data.frame(variable = names(backward_model$coefficients),
b_backward = backward_model$coefficients, row.names = NULL)
df4 <- data.frame(variable = names(backward_stepwise_model$coefficients),
b_backstep = backward_stepwise_model$coefficients, row.names = NULL)
df5 <- data.frame(variable = names(forward_model$coefficients),
b_forward = forward_model$coefficients, row.names = NULL)
df6 <- data.frame(variable = names(forward_stepwise_model$coefficients),
b_model6 = forward_stepwise_model$coefficients, row.names = NULL)
df7 <- data.frame(variable = names(forward_stepwise_new$coefficients),
b_redmodel = forward_stepwise_new$coefficients, row.names = NULL)
models <- full_join(df3,df4) |> full_join(df5) |> full_join(df7)
models
```
## 3(c)
Calculate McFadden’s adjusted pseudo R2, AIC and BIC for all models from Table.3(b), and indicate which model is best, according to each of these criteria
```{r}
Present a table, Table.3(b), with the estimated β-parameters in each of the different models (you will end up with at least one and at most six different models). Use one row for each variable that is present in at least one of the models, and one column of estimates for each of the models
df1 <- data.frame(variable = names(null_glm$coefficients),
b_model1 = null_glm$coefficients, row.names = NULL)
Present a table, Table.3(b), with the estimated β-parameters in each of the different models (you will end up with at least one and at most six different models). Use one row for each variable that is present in at least one of the models, and one column of estimates for each of the models
df1 <- data.frame(variable = names(null_glm$coefficients),
b_model1 = null_glm$coefficients, row.names = NULL)
df2 <- data.frame(variable = names(excl_glm$coefficients),
b_full = excl_glm$coefficients, row.names = NULL)
df3 <- data.frame(variable = names(backward_model$coefficients),
b_backward = backward_model$coefficients, row.names = NULL)
df4 <- data.frame(variable = names(backward_stepwise_model$coefficients),
b_backstep = backward_stepwise_model$coefficients, row.names = NULL)
df5 <- data.frame(variable = names(forward_model$coefficients),
b_forward = forward_model$coefficients, row.names = NULL)
df6 <- data.frame(variable = names(forward_stepwise_model$coefficients),
b_model6 = forward_stepwise_model$coefficients, row.names = NULL)
df7 <- data.frame(variable = names(forward_stepwise_new$coefficients),
b_redmodel = forward_stepwise_new$coefficients, row.names = NULL)
models <- full_join(df3,df4) |> full_join(df5) |> full_join(df7)
print(models)
```
df7 <- data.frame(variable = names(forward_stepwise_new$coefficients),
b_redmodel = forward_stepwise_new$coefficients, row.names = NULL)
models <- full_join(df3,df4) |> full_join(df5) |> full_join(df7)
print(models)
```
df1 <- data.frame(variable = names(null_glm$coefficients),
b_model1 = null_glm$coefficients, row.names = NULL)
df2 <- data.frame(variable = names(excl_glm$coefficients),
b_full = excl_glm$coefficients, row.names = NULL)
df3 <- data.frame(variable = names(backward_model$coefficients),
b_backward = backward_model$coefficients, row.names = NULL)
df1 <- data.frame(variable = names(null_glm$coefficients),
b_model1 = null_glm$coefficients, row.names = NULL)
df2 <- data.frame(variable = names(excl_glm$coefficients),
b_full = excl_glm$coefficients, row.names = NULL)
df3 <- data.frame(variable = names(backward_model$coefficients),
b_backward = backward_model$coefficients, row.names = NULL)
df4 <- data.frame(variable = names(backward_stepwise_model$coefficients),
b_backstep = backward_stepwise_model$coefficients, row.names = NULL)
df5 <- data.frame(variable = names(forward_model$coefficients),
b_forward = forward_model$coefficients, row.names = NULL)
df6 <- data.frame(variable = names(forward_stepwise_model$coefficients),
b_model6 = forward_stepwise_model$coefficients, row.names = NULL)
df7 <- data.frame(variable = names(forward_stepwise_new$coefficients),
b_redmodel = forward_stepwise_new$coefficients, row.names = NULL)
models <- full_join(df3,df4) |> full_join(df5) |> full_join(df7)
print(models)
```
df6 <- data.frame(variable = names(forward_stepwise_model$coefficients),
b_model6 = forward_stepwise_model$coefficients, row.names = NULL)
df7 <- data.frame(variable = names(forward_stepwise_new$coefficients),
b_redmodel = forward_stepwise_new$coefficients, row.names = NULL)
models <- full_join(df3,df4) |> full_join(df5) |> full_join(df7)
print(models)
```
df7 <- data.frame(variable = names(forward_stepwise_new$coefficients),
b_redmodel = forward_stepwise_new$coefficients, row.names = NULL)
#models <- full_join(df3,df4) |> full_join(df5) |> full_join(df7)
#print(models)
```
glimpse(df)
mutate(df,
vituse_new = factor(vituse == "no",
levels = c(FALSE, TRUE),
labels = c("yes", "no"))) -> df
glimpse(df)
count(df, vituse_new)
# not vituseoften = notoften + no as reference
df <- mutate(df, vituse_new = relevel(vituse_new, "yes"))
forward_stepwise_new <- glm(formula = lowplasma_01 ~ betadiet + bmi + vituse_new + age +
betadiet:bmi, family = "binomial", data = df)
forward_stepwise_new_sum <- summary(forward_stepwise_new)
forward_stepwise_new_sum
df7 <- data.frame(variable = names(forward_stepwise_new$coefficients),
b_redmodel = forward_stepwise_new$coefficients, row.names = NULL)
#models <- full_join(df3,df4) |> full_join(df5) |> full_join(df7)
#print(models)
```
df1 <- data.frame(variable = names(null_glm$coefficients),
b_model1 = null_glm$coefficients, row.names = NULL)
df1 <- data.frame(variable = names(null_glm$coefficients),
b_model1 = null_glm$coefficients, row.names = NULL)
df1
df7 <- data.frame(variable = names(forward_stepwise_new$coefficients),
b_redmodel = forward_stepwise_new$coefficients, row.names = NULL)
models <- full_join(df3,df4) |> full_join(df5) |> full_join(df7)
#print(models)
```
df7 <- data.frame(variable = names(forward_stepwise_new$coefficients),
b_redmodel = forward_stepwise_new$coefficients, row.names = NULL)
df7
models <- full_join(df3,df4) |> full_join(df5) |> full_join(df7)
#print(models)
```
df7 <- data.frame(variable = names(forward_stepwise_new$coefficients),
b_redmodel = forward_stepwise_new_sum$coefficients, row.names = NULL)
df7 <- data.frame(variable = names(forward_stepwise_new$coefficients),
b_redmodel = forward_stepwise_new_sum$coefficients, row.names = NULL)
df7
models <- full_join(df3,df4) |> full_join(df5) |> full_join(df7)
#print(models)
```
df7 <- data.frame(variable = names(forward_stepwise_new_sum$coefficients),
b_redmodel = forward_stepwise_new_sum$coefficients, row.names = NULL)
df1 <- data.frame(variable = names(null_glm$coefficients),
b_model1 = null_glm$coefficients, row.names = NULL)
df2 <- data.frame(variable = names(excl_glm$coefficients),
b_full = excl_glm$coefficients, row.names = NULL)
df3 <- data.frame(variable = names(backward_model$coefficients),
b_backward = backward_sum$coefficients, row.names = NULL)
df4 <- data.frame(variable = names(backward_stepwise_model$coefficients),
b_backstep = backward_stepwise_model$coefficients, row.names = NULL)
df5 <- data.frame(variable = names(forward_model$coefficients),
b_forward = forward_model$coefficients, row.names = NULL)
df6 <- data.frame(variable = names(forward_stepwise_model$coefficients),
b_model6 = forward_stepwise_model$coefficients, row.names = NULL)
df7 <- data.frame(variable = names(forward_stepwise_new_sum$coefficients),
b_redmodel = forward_stepwise_new_sum$coefficients, row.names = NULL)
df7 <- data.frame(variable = names(forward_stepwise_new_sum$coefficients),
b_redmodel = forward_stepwise_new_sum$coefficients, row.names = NULL)
df7 <- data.frame(variable = names(forward_stepwise_new$coefficients),
b_redmodel = forward_stepwise_new_sum$coefficients, row.names = NULL)
df7 <- data.frame(variable = names(forward_stepwise_new$coefficients),
b_redmodel = forward_stepwise_new_sum$coefficients, row.names = NULL)
df7
models <- full_join(df3,df4) |> full_join(df5) |> full_join(df7)
#print(models)
```
model_Back_sum <- summary(backward_model)
model_Forw_sum <- summary(model_Forw_glm)
model_Back_sum <- summary(backward_model)
model_Forw_sum <- summary(forward_model)
model_StepB_sum <- summary(backward_stepwise_model)
model_Redu_sum <- summary(forward_stepwise_new)
model_Back_sum <- summary(backward_model)
model_Forw_sum <- summary(forward_model)
model_StepB_sum <- summary(backward_stepwise_model)
model_Redu_sum <- summary(forward_stepwise_new)
df1 <- data.frame(variable = row.names(model_Back_sum$coefficients),
b_model_Back_glm = backward_model$coefficients, row.names = NULL)
df2 <- data.frame(variable = row.names(model_Forw_sum$coefficients),
b_model_Forw_glm = forward_model$coefficients, row.names = NULL)
df3 <- data.frame(variable = row.names(model_StepB_sum$coefficients),
b_model_StepB_glm = backward_stepwise_model$coefficients, row.names = NULL)
df4 <- data.frame(variable = row.names(model_Redu_sum$coefficients),
b_model_Redu_glm = forward_stepwise_new$coefficients, row.names = NULL)
full_join(df1, df2) |> full_join(df3) |> full_join(df4)
```
full_join(df1, df2) |> full_join(df3) |> full_join(df4)
```
```{r}
collect.AICetc |> mutate(df.1 = NULL) -> collect.AICetc
collect.AICetc
logLik(null_glm)
lnL0 <- logLik(null_glm)[1]
lnL0
collect.AICetc |> mutate(
loglik =  c(logLik(backward_model)[1],
logLik(backward_stepwise_model)[1],
logLik(forward_model)[1],
logLik(forward_stepwise_new)[1])) -> collect.AICetc
collect.AICetc |> mutate(
#R2McF = 1 - loglik/lnL0,
R2McF.adj = 1 - (loglik - (df - 1)/2)/lnL0) -> collect.AICetc
table3d <- collect.AICetc %>%
select(df, AIC, BIC, R2McF.adj)
table3d
```
